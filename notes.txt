                                Python Notes

Data types in python 
1. Numbers: Automatically idetifies if it's a float or int and need not explictly define 

2. Strings: Set of char (declared inside " ")

3. Lists: Contain a set of elements with multiple data type(can be combination of numbers, strings and bool)
        eg:  lists = [1,2,"name", 4]
        
        index starts from 0

    Properties of lists 
        1. Access elements: lists[0] (1) lists[0] etc
        
        2. -ve Indexing: lists[-1] will access the last element (4)
                         Lists[-3] will access the 3rd element from right
        
        3. 	append(): Used for appending and adding elements to the end of the List. lists.append(3) (adds 3 to end of lists)

        4. 	copy():	It returns a shallow copy of a list (shallow copy: reference variable mainly stores the address of the object it refers to.)

        5. clear():	This method is used for removing all items from the list. 

        6. 	count(): These methods count the elements

        7. 	extend(): Adds each element of the iterable to the end of the List
                      lists.extend([5,6,7]) gives: [1,2,"name", 4,5,6,7]
                     
                     Params in extend must be
        
        8. 	index(): Returns the lowest index where the element appears. 
                     lists = [1,2,"name", 4,5,6,7,2]
                     
                     lists.index(2) will give 1, even though 2 is in last index also

        9. insert(): Inserts a given element at a given index in a list.     
                     lists = [1,2,"name", 4,5,6,7,2]
                     lists.insert(1,3)
                     
                     pushes 2 to right and adds element at index 1
                     lists = [1,3,2,"name", 4,5,6,7,2]
                     

        10. pop(): Removes and returns the last value from the List or the  given index value.
                     lists = [1,2,"name", 4,5,6,7,2]
                     print(lists.pop()) #will print 2
                     #new list
                     lists = [1,2,"name", 4,5,6,7]


        11. remove(): Removes a given object from the List. 
                    lists = [1,2,"name", 4,5,6,7,2]
                    lists.remove(2) #will only remove the first 2 it sees 
                    (in this @ index 1)

                    lists = [1,"name", 4,5,6,7,2]
        
        
        12. reverse(): Reverses objects of the List in place.
                        lists = [1,"name", 4,5,6,7,2]
                        lists.reverse()
                        
                        lists= [2, 7, 6, 5, 4, 'name', 1]

        13. sort(): Sort a List in ascending, descending, or user-defined order
                        lists = [1,4,5,6,7,2]
                        lists.sort()
                        #CANNOT GIVE MULTIPLE DATA TYEPES AS INPUT

                        #needs to be a set of same data type
                        lists= [1, 2, 2, 4, 5, 6, 7]

                        lists.sort(reverse=True)
                        #sorts reverse
                        [7, 6, 5, 4, 2, 2, 1]

        14. Slicing: Can cut the lists into parts 
                    lists[Initial : End : IndexJump]
                    index:  0, 1, 2, 3, 4, 5, 6
                    lists= [1, 2, 2, 4, 5, 6, 7]
                    
                    lists[1:5] #start at index 1 and cut till 4
                    [2,2,4,5]

                    lists[::-1] #reverse the lists(it jumps from -1 times iun the list (goes from 7,6,5 etc))

                    lists= lists[::2] (jumps 2 elements in the index)

        15. sorted(): sorts the lists 
                    
                    sorted(lists)
    
                    
